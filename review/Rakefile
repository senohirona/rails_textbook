require 'fileutils'
require 'rake/clean'

BOOK = "book"
BOOK_PDF = BOOK+".pdf"
BOOK_EPUB = BOOK+".epub"
CONFIG_FILE = "config.yml"

def build(mode, chapter)
  sh "review-compile --target=#{mode} --footnotetext --stylesheet=style.css #{chapter} > tmp"
  mode_ext = {"html" => "html", "latex" => "tex",
              "idgxml" => "xml", "inao" => "inao"}
  FileUtils.mv "tmp", chapter.gsub(/re\z/, mode_ext[mode])
end

def build_all(mode)
  sh "review-compile --all --target=#{mode} --footnotetext --stylesheet=style.css"
end

def conv_review
  FileUtils.mkdir_p("md")
  Dir.glob("../_posts/*.md") do |file|
    content = File.read(file)
    content.gsub!(/\A.*?^# /m, "# ")
    ### 無理やり変換
    content.gsub!(/^コラム：([^\n]*)\n([^\n]*)\n\n/m){ "====[column] #{$1}\n\n#{$2}\n\n====[/column]\n"}
##    content.gsub!(/^コラム：([^\n]*)\n([^\n]*)\n\n/m){ "//note[#{$1}]{\n\n#{$2}\n\n//}\n"}
    newfile = file.sub(/_posts/, "md")
    File.open(newfile, "w") do |f|
      f.write(content)
    end
  end

  Dir.glob("../md/*.md") do |file|
    newfile = file.gsub(/\.md/, ".re")
    newfile.gsub!(/md\//, "review/")
    newfile.gsub!(/201\d-\d\d-\d\d-/, "")
    system("md2review --render-enable-cmd --parse-no-intra-emphasis #{file} > #{newfile}")
  end

  Dir.glob("../assets/**/*.png") do |file|
    newfile = file.gsub(/assets\//, "review/images/")
    newfile.downcase!
    newfile.gsub!(/kn\//, "")
    dir = File.dirname(newfile)
    FileUtils.mkdir_p(dir)
    FileUtils.cp(file, newfile)
  end

  FileUtils.cp("../assets/my-first-web-app/welcome_rails.png", "../review/images/smallest-app/")
end

task :default => :all

desc "build html (Usage: rake build re=target.re)"
task :html do
  if ENV['re'].nil?
    puts "Usage: rake build re=target.re"
    exit
  end
  build("html", ENV['re'])
end

desc "build all html"
task :html_all do
  build_all("html")
end

desc "build all html"
task :conv_review do
  conv_review()
end

desc 'generate PDF and EPUB file'
task :all => [:conv_review, :pdf, :epub]

desc 'generate PDF file'
task :pdf => BOOK_PDF

desc 'generate EPUB file'
task :epub => BOOK_EPUB

SRC = FileList['*.re'] + [CONFIG_FILE]

file BOOK_PDF => SRC do
  FileUtils.rm_rf [BOOK_PDF, BOOK, BOOK+"-pdf"]
  sh "review-pdfmaker #{CONFIG_FILE}"
end

file BOOK_EPUB => SRC do
  FileUtils.rm_rf [BOOK_EPUB, BOOK, BOOK+"-epub"]
  sh "review-epubmaker #{CONFIG_FILE}"
end

CLEAN.include([BOOK, BOOK_PDF, BOOK_EPUB, BOOK+"-pdf", BOOK+"-epub"])
